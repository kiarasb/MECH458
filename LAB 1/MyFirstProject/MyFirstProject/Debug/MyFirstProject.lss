
MyFirstProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000204  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000288  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ed4  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c45  00000000  00000000  000011cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004e1  00000000  00000000  00001e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  000022f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000569  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000127  00000000  00000000  000028b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000029dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	23 d0       	rcall	.+70     	; 0x13c <main>
  f6:	84 c0       	rjmp	.+264    	; 0x200 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <delaynus>:
# REVISED ############################################################### */
#include <stdlib.h> // the header of the general-purpose standard library of C programming language
#include <avr/io.h>// the header of I/O port
#include <util/delay_basic.h>
void delaynus(int n) // delay microsecond
{
  fa:	ac 01       	movw	r20, r24
	int k; for(k=0;k<n;k++)
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	05 c0       	rjmp	.+10     	; 0x10c <delaynus+0x12>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	9a 95       	dec	r25
 106:	f1 f7       	brne	.-4      	; 0x104 <delaynus+0xa>
 108:	2f 5f       	subi	r18, 0xFF	; 255
 10a:	3f 4f       	sbci	r19, 0xFF	; 255
 10c:	24 17       	cp	r18, r20
 10e:	35 07       	cpc	r19, r21
 110:	c4 f3       	brlt	.-16     	; 0x102 <delaynus+0x8>
	_delay_loop_1(1);
}
 112:	08 95       	ret

00000114 <delaynms>:
void delaynms(int n) // delay millisecond
{
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	8c 01       	movw	r16, r24
	int k; for(k=0;k<n;k++)
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	04 c0       	rjmp	.+8      	; 0x12c <delaynms+0x18>
	delaynus(1000);
 124:	88 ee       	ldi	r24, 0xE8	; 232
 126:	93 e0       	ldi	r25, 0x03	; 3
 128:	e8 df       	rcall	.-48     	; 0xfa <delaynus>
	int k; for(k=0;k<n;k++)
	_delay_loop_1(1);
}
void delaynms(int n) // delay millisecond
{
	int k; for(k=0;k<n;k++)
 12a:	21 96       	adiw	r28, 0x01	; 1
 12c:	c0 17       	cp	r28, r16
 12e:	d1 07       	cpc	r29, r17
 130:	cc f3       	brlt	.-14     	; 0x124 <delaynms+0x10>
	delaynus(1000);
}
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	1f 91       	pop	r17
 138:	0f 91       	pop	r16
 13a:	08 95       	ret

0000013c <main>:

/* ################## MAIN ROUTINE ################## */
int main(int argc, char *argv[]){
	//Testing for Milestone 1:
	DDRL = 0b11111111; // Sets all pins on PORTL to output
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
	PORTL = 0b00110001;
 142:	81 e3       	ldi	r24, 0x31	; 49
 144:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
	
	// created while loop to repeat the night rider pattern
	while(1==1){
	DDRC = 0b11111111; // sets all pins on PORTC to output
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	87 b9       	out	0x07, r24	; 7
	// initialize specific pins to high to turn on LEDs
	PORTC = 0b00000011; 
 14c:	c3 e0       	ldi	r28, 0x03	; 3
 14e:	c8 b9       	out	0x08, r28	; 8
	delaynms(200); // 200ms delay 
 150:	88 ec       	ldi	r24, 0xC8	; 200
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	df df       	rcall	.-66     	; 0x114 <delaynms>
	PORTC = 0b00000111;
 156:	d7 e0       	ldi	r29, 0x07	; 7
 158:	d8 b9       	out	0x08, r29	; 8
	delaynms(200);
 15a:	88 ec       	ldi	r24, 0xC8	; 200
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	da df       	rcall	.-76     	; 0x114 <delaynms>
	PORTC = 0b00001111;
 160:	1f e0       	ldi	r17, 0x0F	; 15
 162:	18 b9       	out	0x08, r17	; 8
	delaynms(200);
 164:	88 ec       	ldi	r24, 0xC8	; 200
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	d5 df       	rcall	.-86     	; 0x114 <delaynms>
	PORTC = 0b00011110;
 16a:	0e e1       	ldi	r16, 0x1E	; 30
	delaynms(200);
 16c:	08 b9       	out	0x08, r16	; 8
 16e:	88 ec       	ldi	r24, 0xC8	; 200
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	d0 df       	rcall	.-96     	; 0x114 <delaynms>
	PORTC = 0b00111100;
 174:	0f 2e       	mov	r0, r31
 176:	fc e3       	ldi	r31, 0x3C	; 60
 178:	ff 2e       	mov	r15, r31
 17a:	f0 2d       	mov	r31, r0
	delaynms(200);
 17c:	f8 b8       	out	0x08, r15	; 8
 17e:	88 ec       	ldi	r24, 0xC8	; 200
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	c8 df       	rcall	.-112    	; 0x114 <delaynms>
	PORTC = 0b01111000;
 184:	0f 2e       	mov	r0, r31
 186:	f8 e7       	ldi	r31, 0x78	; 120
 188:	ef 2e       	mov	r14, r31
 18a:	f0 2d       	mov	r31, r0
	delaynms(200);
 18c:	e8 b8       	out	0x08, r14	; 8
 18e:	88 ec       	ldi	r24, 0xC8	; 200
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	c0 df       	rcall	.-128    	; 0x114 <delaynms>
	PORTC = 0b11110000;
 194:	0f 2e       	mov	r0, r31
 196:	f0 ef       	ldi	r31, 0xF0	; 240
 198:	df 2e       	mov	r13, r31
 19a:	f0 2d       	mov	r31, r0
	delaynms(200);
 19c:	d8 b8       	out	0x08, r13	; 8
 19e:	88 ec       	ldi	r24, 0xC8	; 200
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	b8 df       	rcall	.-144    	; 0x114 <delaynms>
	PORTC = 0b11100000;
 1a4:	0f 2e       	mov	r0, r31
 1a6:	f0 ee       	ldi	r31, 0xE0	; 224
 1a8:	cf 2e       	mov	r12, r31
 1aa:	f0 2d       	mov	r31, r0
	delaynms(200);
 1ac:	c8 b8       	out	0x08, r12	; 8
 1ae:	88 ec       	ldi	r24, 0xC8	; 200
 1b0:	90 e0       	ldi	r25, 0x00	; 0
	PORTC = 0b11000000;
 1b2:	b0 df       	rcall	.-160    	; 0x114 <delaynms>
	delaynms(200);
 1b4:	80 ec       	ldi	r24, 0xC0	; 192
 1b6:	88 b9       	out	0x08, r24	; 8
 1b8:	88 ec       	ldi	r24, 0xC8	; 200
	PORTC = 0b11100000;
 1ba:	90 e0       	ldi	r25, 0x00	; 0
	delaynms(200);
 1bc:	ab df       	rcall	.-170    	; 0x114 <delaynms>
 1be:	c8 b8       	out	0x08, r12	; 8
 1c0:	88 ec       	ldi	r24, 0xC8	; 200
	PORTC = 0b11110000;
 1c2:	90 e0       	ldi	r25, 0x00	; 0
	delaynms(200);
 1c4:	a7 df       	rcall	.-178    	; 0x114 <delaynms>
 1c6:	d8 b8       	out	0x08, r13	; 8
 1c8:	88 ec       	ldi	r24, 0xC8	; 200
	PORTC = 0b01111000;
	delaynms(200);
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	a3 df       	rcall	.-186    	; 0x114 <delaynms>
 1ce:	e8 b8       	out	0x08, r14	; 8
	PORTC = 0b00111100;
 1d0:	88 ec       	ldi	r24, 0xC8	; 200
	delaynms(200);
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	9f df       	rcall	.-194    	; 0x114 <delaynms>
 1d6:	f8 b8       	out	0x08, r15	; 8
	PORTC = 0b00011110;
 1d8:	88 ec       	ldi	r24, 0xC8	; 200
	delaynms(200);
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	9b df       	rcall	.-202    	; 0x114 <delaynms>
 1de:	08 b9       	out	0x08, r16	; 8
	PORTC = 0b00001111;
 1e0:	88 ec       	ldi	r24, 0xC8	; 200
	delaynms(200);
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	97 df       	rcall	.-210    	; 0x114 <delaynms>
 1e6:	18 b9       	out	0x08, r17	; 8
 1e8:	88 ec       	ldi	r24, 0xC8	; 200
	PORTC = 0b00000111;
 1ea:	90 e0       	ldi	r25, 0x00	; 0
	delaynms(200);
 1ec:	93 df       	rcall	.-218    	; 0x114 <delaynms>
 1ee:	d8 b9       	out	0x08, r29	; 8
 1f0:	88 ec       	ldi	r24, 0xC8	; 200
 1f2:	90 e0       	ldi	r25, 0x00	; 0
	PORTC = 0b00000011;
 1f4:	8f df       	rcall	.-226    	; 0x114 <delaynms>
	delaynms(200);
 1f6:	c8 b9       	out	0x08, r28	; 8
 1f8:	88 ec       	ldi	r24, 0xC8	; 200
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	8b df       	rcall	.-234    	; 0x114 <delaynms>
 1fe:	a4 cf       	rjmp	.-184    	; 0x148 <main+0xc>

00000200 <_exit>:
 200:	f8 94       	cli

00000202 <__stop_program>:
 202:	ff cf       	rjmp	.-2      	; 0x202 <__stop_program>
